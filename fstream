#include <iostream>
#include <fstream>
#include <vector>
using namespace std;

class matrix
{
public:

    matrix() {};


    matrix(int size)
    {
        int** array;

        array = new int* [size];

        for (int i = 0; i < size; ++i)
        {
            array[i] = new int[size];
        }
    }

    void init(int** array, int size)
    {
        for (int i = 0; i < size; ++i)
        {
            for (int j = 0; j < size; ++j)
            {
                array[i][j] = i;
            }
        }
    }

    ~matrix() {};


    void swap(int** array, int size)
    {
        for (int i = 0; i < size; ++i)
        {
            int* temp = new int(1);
            *temp = array[0][i];
            array[0][i] = array[2][i];
            array[2][i] = *temp;
        }
    }

    void print(int** array, int size)
    {
        for (int i = 0; i < size; ++i)
        {
            for (int j = 0; j < size; j++)
            {
                cout << array[i][j];
            }
            cout << endl;
        }
    }


};

int main() {

    std::ofstream fs("MatrixClass.cpp");

    if (!fs.is_open()) {
        std::cerr << "Error opening file for writing." << std::endl;
        return 1;
    }


    fs.close();

    int size;
    cin >> size;
    int** array = new int* [size];
    for (int i = 0; i < size; ++i)
    {
        array[i] = new int[size];
    }

    matrix obj;
    matrix matrixobj1(size);
    obj.init(array, size);
    obj.swap(array, size);
    obj.print(array, size);

    return 0;
}
